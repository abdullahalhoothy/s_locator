# --- Nginx Configuration and SSL Setup Guide for s-locator.northernacs.com ---
# Copy this entire file and save it. Uncomment commands as needed to execute them.

# --- 1. Install Nginx ---
# Update package lists
# sudo apt update

# Install Nginx
# sudo apt install nginx

# Start and enable Nginx
# sudo systemctl start nginx
# sudo systemctl enable nginx

# --- 2. Create the Nginx Configuration ---
# Create the configuration file
# sudo nano /etc/nginx/sites-available/s-locator.northernacs.com

# Initial configuration (HTTP only) - Copy this into the file when you run the nano command above
# server {
#     listen 80;
#     listen [::]:80;
#     server_name s-locator.northernacs.com;
#     
#     location / {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# --- 3. Enable the Site ---
# Create symbolic link to enable the site
# sudo ln -s /etc/nginx/sites-available/s-locator.northernacs.com /etc/nginx/sites-enabled/

# Test configuration
# sudo nginx -t

# If test passes, restart Nginx
# sudo systemctl restart nginx

# --- 4. Install Certbot for SSL ---
# Install Certbot and Nginx plugin
# sudo apt update
# sudo apt install certbot python3-certbot-nginx

# --- 5. Obtain SSL Certificates ---
# Run Certbot to get certificates and update Nginx config
# sudo certbot --nginx -d s-locator.northernacs.com --non-interactive --agree-tos -m abdulahabbas@northernacs.com --redirect

# --- 6. Update Nginx Configuration with Proper Headers ---
# Edit the configuration file
# sudo nano /etc/nginx/sites-available/s-locator.northernacs.com

# Complete configuration - Copy this into the file when you run the nano command above
# server {
#     listen 80;
#     listen [::]:80;
#     server_name s-locator.northernacs.com;
#     return 301 https://$host$request_uri;
# }
# server {
#     server_name s-locator.northernacs.com;
#     listen 443 ssl;
#     listen [::]:443 ssl;
#     include /etc/letsencrypt/options-ssl-nginx.conf;
#     ssl_certificate /etc/letsencrypt/live/s-locator.northernacs.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/s-locator.northernacs.com/privkey.pem;
#     
#     # Main application on port 3000
#     location / {
#         proxy_pass http://localhost:3000;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto $scheme;  # Critical for HTTPS
#         proxy_cache_bypass $http_upgrade;
#     }
#     
#     location /fastapi/ {
#         proxy_pass http://localhost:8000/fastapi/;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
#     
#     # pgAdmin on port 5050
#     location /pgadmin/ {
#         proxy_pass http://localhost:5050/;
#         proxy_http_version 1.1;
#         proxy_set_header X-Script-Name /pgadmin;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# --- 7. Properly Restart Nginx ---
# First, stop Nginx properly
# sudo systemctl stop nginx

# Kill any lingering Nginx processes
# sudo pkill -f nginx
# sudo killall -9 nginx  # More aggressive kill if needed

# Verify no Nginx processes remain
# ps aux | grep nginx

# Check if ports 80 and 443 are free
# sudo lsof -i :80
# sudo lsof -i :443

# Start Nginx
# sudo systemctl start nginx

# Check status
# sudo systemctl status nginx

# --- 8. Verify Setup ---
# Visit https://s-locator.northernacs.com in your browser to verify everything is working

# --- Troubleshooting ---
# If Nginx fails to start with "Address already in use" errors:
# sudo lsof -i :80
# sudo lsof -i :443
# sudo fuser -k 80/tcp
# sudo fuser -k 443/tcp
# sudo reboot  # If all else fails

# Check Docker services:
# docker ps
# cat docker-compose.yml
# docker-compose restart

server {
    listen 80;
    listen [::]:80;
    server_name s-locator.northernacs.com;
    return 301 https://$host$request_uri;
}

server {
    server_name s-locator.northernacs.com;

    # SSL configuration from certbot will be in these includes
    listen 443 ssl;
    listen [::]:443 ssl;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_certificate /etc/letsencrypt/live/s-locator.northernacs.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/s-locator.northernacs.com/privkey.pem;

    # Main application on port 3000
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    location /fastapi/ {
        proxy_pass http://localhost:8000/fastapi/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # pgAdmin on port 5050
    location /pgadmin/ {
        proxy_pass http://localhost:5050/;
        proxy_http_version 1.1;
        proxy_set_header X-Script-Name /pgadmin;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}
